#include <iosteram>
#include <iomanip>
#include <string>
using namespace std;

struct Price {
    void input (Price*product, int n);
    
    int productID;
    char name[20];
    char shopName[20];
    int cost;
    int stockUnits; //кол-во на складе
    
};
    void Price::input (Price*product, int n) { //фукц. члена
    cout << " -Input product ID : ";
    int check;
    do {
        check = 0;
    cin >> productID;
    for (int i = 0; i < n; i++) 
    {
        if (productID != product[i].ProductID)
        { 
            check++;
        }
    };
}
    if (check != n - 1)
    {
        cout << " Such ID is already engaged. Try again." << endl;
    }
    }
    while (check != n - 1);
    cout << " -Input name of product : "; cin >> name;
    cout << " -Input name of shop : "; cin >> shopName;
    cout << " -Input the price of " << name << " ; "; cin >> cost;
    cout << " -Input units of " << name << " in the stock : "; cin >> stockUnits;
    };
    void output (Price*product, int n)
    {
        cout << setw(10) << "" << setw(10) << "ID" << setw(15) << "Product name" << setw(15) <<  "Shop name" << setw(10) << "Price" << setw(20) << "Units in stock" << endl;
        for (int i = 0; i < n; i++) {
            cout << setw(10) << "Product #" << i + 1 << setw(10) << product[i].ProductID << setw(15) << product[i].name << setw(15) << product[i].shopName << setw(10) << product[i].cost << setw(10) << product[i].stockUnits << endl;
        }
    };
    void sort(Price*product, int n) 
    {
        for (int i = 0; i < n; i++)
        {
            for (int k = i + 1; k < n; k++)
            {
                if (product[k].cost < product[i].cost)
                {
                    Price save = product[k];
                    product[k] = product[i];
                    product[i] = save;
                }
            }
        };
        cout << "Sucess." << endl;
    };
    void shopGroup(Price*product, int n)
    {
        for (int i = 0; i < n; i++)
        {
            for (int j = i + 1; j < n; j++)
            {
                for ( int k = 0; k < 20; k++)
                {
                    if (product[i].shopName[k] > product[j].shopName[k])
                    {
                        sort = product[j];
                        product[j] = product[i];
                        product[i] = sort;
                        break;
                    }
                    break;
                }
            }
        }
        Price sort;
        for (int i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                if (strcmp (productpi[.shopName, product[j].shopName) == 0) 
                {
                    for (int l = 0; k < 20; k++)
                    {
                        prduct[j].shopName[k] = ' ';
                    };
                    product[j].shopName[20] = '\0' ;
                }
            }
             cout << setw(20) << "Shop name" <<  setw(10) << " " <<  setw(10) << "ID" << setw(15) << "Product name" << setw(10) << "Price" << setw(20) << "Units in stopck" << endl;
        for (int i = 0; i < n; i++)
        {
             cout << setw(20) << product[i].shopName << i + 1 << setw(10) << "Product #" << i + 1 <<  setw(10) << product[i].ID << setw(15) << product[i].name << setw(10) << product[i].cost << setw(10) << product[i].stockUnits << endl;
        }
        }
        void idFind(Price*product, int n, int k) 
        {
            int check = 0;
            for (int i = 0; i < n; i++)
            {
                if (product[i].productID == k) 
                {
                    cout << "ID : " << product[i].productID <<endl;
                    cout << "Product : " << product[i].name << endl;
                    cout << "Shop name : " << PRODUCT[I].COST << endl;
                    cout << "Price : " << product[i].cost << endl;
                    cout << "Unitsin stock " << product[i].StockUnits << endl;
                    check++;
                    break;;
                }
            }
            if (check == 0) 
            {
               cout << "No products wich suck ID. " << endl; 
            }
        }
        void stockFind (Price*product, int n, int k) 
        {
            int check = 0;
            for (int i = 0
